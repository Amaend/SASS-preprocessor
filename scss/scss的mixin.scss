// 混合指令（Mixin）用于定义可重复使用的样式。混合指令可以包含所有的 CSS 规则，绝大部分 SCSS 规则，甚至通过参数功能引入变量，输出多样化的样式。
// mixin的定义
// mixin单参数的使用
// @mixin block($color) {
//     width: 200px;
//     height: 200px;
//     color: $color;
//     border: 1px solid #ccc;
// }
// // mixin的使用
// .container {
//     // 当存在一个变量时，可以直接传递参数
//     @include block(pink);
// }
// .father {
//     @include block(black);
// }
// mixin多参数的使用(可以添加默认值)
@mixin block($color, $border, $width: 200px) {
    width: $width;
    height: 200px;
    color: $color;
    border: $border;
}
.father {
    @include block(black, 1px solid #ccc);
}
// 同时也可以指定传入参数
.son {
    @include block($color: red, $border: 2px solid #ccc, $width: 100px);
}
// @mixin混入总结
// mixin是可以重复使用的一组CSS声明
// mixin有助于减少重复代码，只需声明一次，就可在文件中引用
// 混合指令可以包含所有的 CSS 规则，绝大部分 SCSS 规则，甚至通过参数功能引入变量，输出多样化的样式。
// 使用参数时建议加上默认值
